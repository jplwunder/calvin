openapi: 3.0.3
info:
  title: Calvin API
  description: API for managing customers
  version: 1.0.0
servers:
  - url: http://localhost:8080
    description: Local development server
paths:
  /healthcheck:
    get:
      summary: Check API health
      description: Returns the current status of the API and system information
      operationId: healthcheck
      tags:
        - System
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: available
                  system_info:
                    type: object
                    properties:
                      environment:
                        type: string
                        example: development
                      version:
                        type: string
                        example: 1.0.0
                      trusted_origins:
                        type: string
                        example: http://localhost:8080, http://localhost:3000
  /customers:
    get:
      summary: List all customers
      description: Returns a list of all customers
      operationId: listCustomers
      tags:
        - Customers
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Customer'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      summary: Create a new customer
      description: Creates a new customer with the provided information
      operationId: createCustomer
      tags:
        - Customers
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewCustomer'
      responses:
        '201':
          description: Customer created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Customer'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /customers/{id}:
    get:
      summary: Get a specific customer
      description: Returns a specific customer by ID
      operationId: getCustomer
      tags:
        - Customers
      parameters:
        - name: id
          in: path
          required: true
          description: Customer ID
          schema:
            type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Customer'
        '404':
          description: Customer not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
components:
  schemas:
    Customer:
      type: object
      properties:
        id:
          type: string
          example: "1"
        name:
          type: string
          example: "John Doe"
        phone:
          type: integer
          format: int64
          example: 5551234567890
        email:
          type: string
          format: email
          example: "john.doe@example.com"
      required:
        - id
        - name
        - phone
        - email
    NewCustomer:
      type: object
      properties:
        name:
          type: string
          example: "John Doe"
        phone:
          type: integer
          format: int64
          example: 5551234567890
        email:
          type: string
          format: email
          example: "john.doe@example.com"
      required:
        - name
        - phone
        - email
    Error:
      type: object
      properties:
        error:
          type: string
          example: "Resource not found"
